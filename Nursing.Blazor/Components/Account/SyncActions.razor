@using Nursing.Blazor.Services
@inject NavigationManager Navigation
@inject SyncService Sync
@inject IJSRuntime JSRuntime

<div class="container">
    <div class="row mt-3">
        <div class="col-6">
            <span>Last Synced: @(LastSynced?.ToString() ?? "Never")</span>
            <button type="button" @onclick="SyncNow" class="btn btn-primary">
                Sync Now
            </button>
        </div>
        <div class="col-6">
            <button type="button" @onclick="Logout" class="btn btn-secondary">
                Log Out
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col-12 my-3">
            <h2>Change Password</h2>
        </div>
    </div>
    <form class="row" @onsubmit="ChangePassword">
        <div class="col-6">
            <div class="mb-3">
                <label for="currentPassword" class="form-label">Current Password</label>
                <input type="password" class="form-control" @bind="CurrentPassword" id="currentPassword" />
            </div>
        </div>
        <div class="col-6">
            <div class="mb-3">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" @bind="NewPassword" id="newPassword" />
            </div>
        </div>
        <div class="col-6">
            <button type="submit" class="btn btn-primary">
                Change Password
            </button>
        </div>
    </form>
</div>
<AlertError @ref="alertError" />

@code {
    private AlertError alertError = null!;
    private DateTime? LastSynced = null;

    private async Task SyncNow()
    {
        var result = await JSRuntime.ShowLoadingModal(async () => await Sync.Sync());
        await alertError.ShowAlert(result.message, result.success);
    }

    private async Task Logout()
    {
        await Sync.Logout();
        Navigation.NavigateTo("/login");
    }

    private string CurrentPassword = string.Empty;
    private string NewPassword = string.Empty;

    private async Task ChangePassword()
    {
        var result = await JSRuntime.ShowLoadingModal(async () => await Sync.ChangePassword(CurrentPassword, NewPassword));
        await alertError.ShowAlert(result.message, result.success);
    }
}