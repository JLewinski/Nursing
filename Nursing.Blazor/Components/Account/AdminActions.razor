@inject Nursing.Blazor.Services.SyncService Sync
@inject IToastService toastService

<div class="container">
    <form @onsubmit="Register" class="my-3">
        <h2>Register</h2>
        <div class="row">
            <div class="col">
                <div class="mb-3">
                    <label for="regUsername">Username</label>
                    <input class="form-control" id="regUsername" @bind="RegisterUsername" />
                </div>
            </div>
            <div class="col">
                <div class="mb-3">
                    <label for="regPassword">Password</label>
                    <input class="form-control" type="password" id="regPassword" @bind="Password" />
                </div>
            </div>
            <div class="col">
                <div class="mb-3">
                    <label for="regIsAdmin">Is Admin <input type="checkbox" id="regIsAdmin" @bind="IsAdmin" /></label>
                    
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Register</button>
    </form>
    <form @onsubmit="DeleteUser">
        <h2>Delete User</h2>
        <div class="row">
            <div class="col">
                <label for="delUsername">Username</label>
                <input id="delUsername" @bind="DeleteUsername" />
            </div>
        </div>
        <button type="submit" class="btn btn-danger">Delete</button>
    </form>
</div>

@code {
    private string RegisterUsername = string.Empty;
    private string Password = string.Empty;
    private bool IsAdmin = false;

    private string DeleteUsername = string.Empty;

    private async Task Register()
    {
        var (success, message) = await Sync.Register(RegisterUsername, Password, IsAdmin);
        toastService.ShowToast(message, success);
    }

    private async Task DeleteUser()
    {
        var (success, message) = await Sync.Delete(DeleteUsername);
        toastService.ShowToast(message, success);
    }
}