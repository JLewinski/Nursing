@DurationToString(Duration)

@code {

    [Parameter]
    public DateTime? StartTime { get; set; }

    [Parameter]
    public DateTime? EndTime { get; set; }

    [Parameter]
    public TimeSpan Duration { get; set; }

    private TimeSpan previousDuration;

    [Parameter]
    public bool ShowHours { get; set; } = false;

    [Parameter]
    public bool ShowNegative { get; set; } = false;

    [Parameter]
    public bool IsTimer { get; set; } = false;

    private Timer? timer = null;

    public async Task ManualUpdate(TimeSpan duration)
    {
        Duration = duration;
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (IsTimer)
        {
            previousDuration = Duration;
            timer = new Timer(async _ =>
            {
                if (StartTime.HasValue && EndTime.HasValue)
                {
                    Duration = EndTime.Value - StartTime.Value;
                }
                else if (StartTime.HasValue)
                {
                    Duration = DateTime.UtcNow - StartTime.Value;
                }
                else if (EndTime.HasValue)
                {
                    Duration = EndTime.Value - DateTime.UtcNow;
                }

                if ((int)previousDuration.TotalSeconds != (int)Duration.TotalSeconds)
                {
                    previousDuration = Duration;
                    await InvokeAsync(StateHasChanged);
                }
            }, null, 0, 100);
        }
    }

    private string DurationToString(TimeSpan time)
    {
        if (time < TimeSpan.Zero && !ShowNegative)
        {
            return DurationToString(TimeSpan.Zero);
        }

        var duration = time.Duration();

        var text = ShowHours ? duration.Minutes.ToString("00") : ((int)duration.TotalMinutes).ToString("0");

        if (ShowHours)
        {
            var hoursText = ShowHours ? ((int)duration.TotalHours).ToString("0") : "";
            text = hoursText + ":" + text;
        }
        else
        {
            text += ":" + duration.Seconds.ToString("00");
        }

        if (time < TimeSpan.Zero)
        {
            text = "-" + text;
        }

        return text;
    }
}
